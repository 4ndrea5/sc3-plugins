{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 BFDecode1			
\fs28 3D Ambisonic decoder
\fs36 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 BFDecode1.ar(w, x, y, z, azimuth, elevation)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
Decode a two dimensional ambisonic B-format signal for any speaker arrangement\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 w, x, y, z
\f1\b0  - the B-format signals. \

\f0\b azimuth
\f1\b0  - the angle from 0pi front and center of the speaker.  Can be an array of angles.
\f0\b \
elevation 
\f1\b0 - the angle from 0pi center of the speaker.  Can be an array of angles.\
\
s=Server.internal.boot;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2 \cf0 (\
\{\
	\cf2 var\cf0  w, x, y, z, p, a, b, c, d;\
	\
	p = \cf2 PinkNoise\cf0 .ar; \cf3 // source\cf0 \
	\
	\cf3 // B-format encode\cf0 \
	#w, x, y, z = \cf2 BFEncode1\cf0 .ar(p, MouseX.kr(-pi, pi), MouseY.kr(0.25pi, -0.25pi), 1); \
	\
	\cf3 // B-format decode to cube / quad ([lfh, rfh, rrh, lrh, lfl, rfl, rrl, lrl])\
	// lfl = left fron high, lfl = left front low etc...\cf0 \
	\cf2 BFDecode1\cf0 .ar(w, x, y, z, \
		[-0.25pi, 0.25pi, 0.75pi, 1.25pi,-0.25pi, 0.25pi, 0.75pi, 1.25pi], \
		[0.25pi,0.25pi,0.25pi,0.25pi,-0.25pi,-0.25pi,-0.25pi,-0.25pi,]);\
	\
\}.scope(8);\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 3D Ambisonic decoder with compensation for speakers at different distances (delay and intenisty caluclated for meters)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 BFDecode2.ar1(w, x, y, z, azimuth, elevation, maxDist, distance)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
Decode a two dimensional ambisonic B-format signal for any speaker arrangement\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 w, x, y, z
\f1\b0  - the B-format signals. \

\f0\b azimuth
\f1\b0  - the angle from 0pi front and center of the speaker.  Can be an array of angles.
\f0\b \
elevation 
\f1\b0 - the angle from 0pi center of the speaker.  Can be an array of angles.\

\f0\b maxDist - 
\f1\b0 the distance (in meters) to the furthest speaker from center (this allocates the delay size)\

\f0\b distance
\f1\b0  - the distance (in meteres) to each speaker.\
\
s=Server.internal.boot;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2 \cf0 (\
\{\
	\cf2 var\cf0  w, x, y, z, p;\
	\
	p = PinkNoise.ar(1) * \cf2 LFSaw\cf0 .kr(2, pi, -0.2, 0.2);
\fs20  
\fs24 \cf3 // source\cf0 \
	\
	\cf3 // B-format encode\cf0 \
	#w, x, y, z = \cf2 BFEncode1\cf0 .ar(p, MouseX.kr(-0.5pi, 0.5pi), 0, 1); \
	\
	\cf3 // B-format decode to stereo with speakers at different distances\cf0 \
	\cf2 BFDecode1\cf0 .ar1(w, x, y, z, [-0.25pi, 0.25pi], 0, 10, [MouseY.kr(5, 10), 10]);\
	\
\}.scope(2);\
)}