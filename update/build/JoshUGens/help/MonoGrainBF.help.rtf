{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green115\blue0;\red96\green96\blue96;
\red0\green0\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf2 MonoGrainBF		granulates real-time input with Ambisonic panning
\f1\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf2 MonoGrainBF.ar(in, winsize, grainrate, winrandpct, azimuth, azrand, elevation, elrand, rho, mul, add)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf2 \
	
\f0\b in - 
\f1\b0 a mono input
\f0\b \
	winsize - 
\f1\b0 the window size in seconds\
	
\f0\b grainrate - 
\f1\b0 the rate of which new grains are created (in Hz)\
	
\f0\b winrandpct - 
\f1\b0 a randomness factor for window size (as a percentage of the winsize)\
	
\f0\b azimuth - 
\f1\b0 in radians, -pi to pi
\f0\b \
	azrand - 
\f1\b0 percentage of deviation from the azimuth
\f0\b \
	elevation - 
\f1\b0 in radians, -0.5pi to 0.5pi
\f0\b \
	elrand - 
\f1\b0 percentage of deviation from the elevation
\f0\b \
	rho - 
\f1\b0 the speaker radius.  (1 places shound at the radius, <1 within the radius, >1 is outside the radius)\
		beyond the radius, this mostly acts as an amplitude scaler (no filtering is done).
\f0\b \
\
Examples:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf2 s.boot;\
\
(\
s.sendMsg(\cf3 \\b_allocRead\cf2 , 0, \cf4 "sounds/a11wlk01-44.1.aiff"\cf2 , 0, -1);\
\
\cf5 SynthDef\cf2 (\cf3 \\monograinbf\cf2 , \{\cf5 arg\cf2  buffer = 0;\
	\cf5 var\cf2  w, x, y, z, out, winsize, grainrate, azimuth, azrand;\
	winsize = 0.05;\
	grainrate = 10;\
	azimuth = \cf5 MouseX\cf2 .kr(-pi, pi); \cf6 // move around the radius\cf2 \
	azrand = \cf5 MouseY\cf2 .kr(0, 1); \cf6 // 0 = no randomness, 1 = totally random\cf2 \
	#w, x, y, z = \cf5 MonoGrainBF\cf2 .ar(\cf5 PlayBuf\cf2 .ar(1, buffer, loop: 1), winsize, grainrate, 0, azimuth, 		azrand);\
	out = \cf5 DecodeB2\cf2 .ar(2, w, x, y, 0.5);\
	\cf5 Out\cf2 .ar(0, out);\
\}).send(s);\
\
)\
\
\
s.sendMsg(\cf3 \\s_new\cf2 , \cf3 \\monograinbf\cf2 , 1000, 0, 0, \cf3 \\buffer\cf2 , 0);\
\
s.sendMsg(\cf3 \\n_free\cf2 , 1000)\
}