{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf330
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green115\blue0;\red96\green96\blue96;\red0\green0\blue191;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 WarpOverlap			Create a texture of Warps
\f1\b0\fs24 \
\
Inspired by Chad Kirby's SuperCollider2 Warp1 class, which was inspired by Richard Karpen's sndwarp for CSound. A granular time strecher and pitchshifter. See the [
\f0\b \ul Warp1\ulnone ]
\f1\b0  helpfile for more information about Warp1's specifics. This texture will create a series of Warp1s that keep up with the current time.\

\f0\b \
WarpOverlap.ar(buffer, overlaps = 4, starttime = 0, stretch = 1, harm = 1, windowsize = 6, step = 1,\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 			warpwindowsize = 0.11, warpwindowoverlaps = 8, warpwindowran = 0.1, mul = 1,\
			add = 0)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
	
\f0\b buffer
\f1\b0  - the buffer number of a mono soundfile.\
	
\f0\b overlaps - 
\f1\b0 the number of overlapping warps to create (should be equal to or greater then 3).\
		this must be a fixed integer. The architechture of the SynthDef\
		cannot change after it is compiled.
\f0\b \
	starttime - 
\f1\b0 an initial starttime for the warp pointer (in the total buffer)
\f0\b \
	stretch -
\f1\b0  a stretch factor for the individual Warps.
\f0\b \
	harm - 
\f1\b0 a float, or an instance of a Ref. If a Ref is used, its values are sequentially distributed among the \
		larger overlapping windows.
\f0\b \
	windowsize -
\f1\b0  the windowsize in seconds of the larger overlapping windows.\
	
\f0\b step -
\f1\b0  a control on the pointer increment. 1 keeps the pointer up with the current time, 0 will halt time.
\f0\b \
	warpwindowsize -
\f1\b0  a float, or an instance of a Ref. The size of the individual warp windows.
\f0\b \
	warpwindowoverlaps -
\f1\b0  a float, or an instance of a Ref. The number of window overlaps for each warp. 
\f0\b \
	warpwindowran -
\f1\b0  a float, or an instance of a Ref. The amount of randomness in each warp's windows.
\f0\b \
	\
\
\
Examples:\
\

\f1\b0 s.boot;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
(\
s.sendMsg(\cf2 \\b_allocRead\cf0 , 0, \cf3 "sounds/a11wlk01.wav"\cf0 , 0, -1);\
\
\cf4 SynthDef\cf0 (\cf2 \\warpoverlap\cf0 , \{\cf4 arg\cf0  buffer = 0, stretch = 1, windowsize = 6, mul = 1, gate = 1;\
	\cf4 var\cf0  out, env, overlaps, harm, wwinsize, wwinoverlap, wwinran;\
	overlaps = 8;\
	harm = [3, 7, 5, -12].midiratio.asRef;\
	wwinsize = `[0.11, 0.11, 0.11, 0.2];\
	wwinsize = 0.11;\
	wwinoverlap = 8;\
	wwinran = 0.1;\
	env = \cf4 EnvGen\cf0 .kr(\cf4 Env\cf0 ([0.01, 1, 0.01], [0.1, 0.1], \cf2 'exp'\cf0 , 1), gate, doneAction: 2);\
	out = \cf4 WarpOverlap\cf0 .ar(buffer, overlaps, 0, stretch, harm, windowsize, wwinsize, wwinoverlap, wwinran, mul);\
	\cf4 Out\cf0 .ar(0, out * env);\
\}).send(s);\
\
)\
\
s.sendMsg(\cf2 \\s_new\cf0 , \cf2 \\warpoverlap\cf0 , a=s.nextNodeID, 0, 1, \cf2 \\buffer\cf0 , 0, \\stretch, 30, \\mul, 0.1)\
\
s.sendMsg(\cf2 \\n_free\cf0 , a);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\
s.sendMsg(\cf2 \\b_allocRead\cf0 , 0, \cf3 "sounds/SoloTuttiMono1.aiff"\cf0 );\
\
}