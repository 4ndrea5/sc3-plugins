{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 OverlapTexture					overlap events
\fs28 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 OverlapTexture.new(synthdef, server)\
\
	synthdef - a valid synthdef (or an array of synthdefs). If the synthdef is an array of \
		synthdefs, OverlapTexture will randomly choose which synthdef to play on each\
		new synth creation.\
	server - if not specified, will will use the default server\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs28 \cf0 \ul \ulc0 Usage\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 \ulnone \
Where OverlapTexture in SC2 was a Spawn wrapper, in SC3 OverlapTexture is a Task wrapper. To work properly, your synthdef MUST have arguments for \\susdur and \\transdur which control an envelope's attack, sustain and decay portions (e.g. 
\f1\b0\fs18  \cf2 Env\cf0 ([0, 1, 1, 0], [transdur, susdur, transdur], \cf3 \\sin\cf0 ) 
\f0\b\fs24 ). Values for these arguments will be passed into the Synth from the OverlapTexture class, and do not need to be included with the arguments.\
\
*play(overlaps, susdur, transdur, maxRepeats, addaction, target, args)\
\
	overlaps - the number of events that should occur at one time\
	susdur - the sustain portion of the synths envelope\
	transdur - the attack and decay portions of the the synths envelopes\
	maxRepeats - if an integer is specified here, then the function will create no more\
		then this number of synths.  Defaults to inf.\
	addaction  - \
		
\f2\b0 0 - add the new node to the the head of the group specified by the add target ID.\
		1 - add the new node to the the tail of the group specified by the add target ID.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-620\ql\qnatural
\cf0 		2 - add the new node just before the node specified by the add target ID.\
		3 - add the new node just after the node specified by the add target ID.\
		4 - the new node replaces the node specified by the add target ID. \

\f0\b 	target  - a target ID\
	args - an array containing arguments to be passed to the synth (transdur \
		and susdur should be excluded). arg values can also be functions that\
		will be evaluated when the synth is called. Can also be an array of args\
		that correspond with the array of synthdefs.\

\f1\b0\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 (\
\cf2 SynthDef\cf0 (\cf3 \\sinetest\cf0 , \{\cf2 arg\cf0  freq, amp = 0.2, susdur = 4, transdur = 1;\
	\cf2 var\cf0  env, sound;\
	env = \cf2 EnvGen\cf0 .kr(\
		\cf2 Env\cf0 ([0, 1, 1, 0], [transdur, susdur, transdur], \cf3 \\sin\cf0 ),\
		doneAction: 2);\
	sound = \cf2 SinOsc\cf0 .ar(freq, 0, amp) * env;\
	\cf2 Out\cf0 .ar(0, sound);\
\}).load(s);\
)\
\
s.boot;\
\
a = \cf2 OverlapTexture\cf0 .new(\cf3 \\sinetest\cf0 , s);\
\
a.play(60, 1, 1, 200, args: [\cf3 \\freq\cf0 , \{440.rrand(880)\}, \cf3 \\amp\cf0 , 60.reciprocal])\
\
a.stop;\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 // with a array of synthdefs\cf0 \
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef\cf0 (\cf3 \\sinetest\cf0 , \{\cf2 arg\cf0  freq, amp = 0.2, susdur = 4, transdur = 1;\
	\cf2 var\cf0  env, sound;\
	env = \cf2 EnvGen\cf0 .kr(\
		\cf2 Env\cf0 ([0, 1, 1, 0], [transdur, susdur, transdur], \cf3 \\sin\cf0 ),\
		doneAction: 2);\
	sound = \cf2 SinOsc\cf0 .ar(freq, 0, amp) * env;\
	\cf2 Out\cf0 .ar(0, \cf2 Pan2\cf0 .ar(sound, \cf2 Rand\cf0 .new(-1.0, 1.0)));\
\}).load(s);\
\
\cf2 SynthDef\cf0 (\cf3 \\noisetest\cf0 , \{\cf2 arg\cf0  amp = 0.2, susdur = 4, transdur = 1;\
	\cf2 var\cf0  env, sound, freq;\
	env = \cf2 EnvGen\cf0 .kr(\
		\cf2 Env\cf0 ([0, 1, 1, 0], [transdur, susdur, transdur], \cf3 \\sin\cf0 ),\
		doneAction: 2);\
	freq = 440.0.rrand(110.0).dup + [0, 5.0.rrand(50.0)];\
	sound = BPF.ar(\cf2 PinkNoise\cf0 .ar(amp), freq, 0.01.rrand(0.1)) * env ;\
	\cf2 Out\cf0 .ar(0, sound);\
\}).load(s);\
)\
\
s.boot;\
\
a = \cf2 OverlapTexture\cf0 .new([\cf3 \\sinetest\cf0 , \cf3 \\noisetest\cf0 ], s);\
\
a.play(60, 1, 1, 200, args: [[\cf3 \\freq\cf0 , \{440.rrand(880)\}, \cf3 \\amp\cf0 , 60.reciprocal], [\cf3 \\amp\cf0 , 10.reciprocal]])\
\
a.stop;\
\
a.isPlaying}