{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-BoldOblique;
\f3\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green115\blue0;
\red96\green96\blue96;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Warp1MC			Warp a multi-channel buffer with a time pointer
\f1\b0\fs24 \
\
Inspired by Chad Kirby's SuperCollider2 Warp1 class, which was inspired by Richard Karpen's sndwarp for CSound. A granular time strecher and pitchshifter.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 Warp1MC.ar(numChannels, buffer, pointer, freqScale, windowSize, overlaps, windowRandRatio, interp, \
		mul, add)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\pardeftab560\ql\qnatural
\cf0 	
\f0\b numChannels
\f1\b0  - number of channels that the buffer will be.\
			this must be a fixed integer. The architechture of the SynthDef\
			cannot change after it is compiled.\
			warning: if you supply a bufnum of a buffer that has a different\
			numChannels then you have specified to the Warp1MC, it will\
			fail silently.\
	
\f0\b buffer
\f1\b0  - the buffer number of a mono soundfile.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	
\f0\b pointer
\f1\b0  - the position in the buffer.  The value should be between 0 and 1, with 0 being the begining\
		of the buffer, and 1 the end.\
	
\f0\b freqScale
\f1\b0 - the amount of frequency shift. 1.0 is normal, 0.5 is one octave down, 2.0 is one octave up.\
		Negative values play the soundfile backwards.\
	
\f0\b windowSIze
\f1\b0  - the size of each grain window\
	
\f0\b overlaps
\f1\b0  - the number of overlaping windows.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 	windowRandRatio 
\f1\b0 - the amount of randomness to the windowing function.  Must be between 0 (no\
		randomness) to 1.0 (probably to random actually)
\f0\b \
	interp -
\f2\i  
\f1\i0\b0 the interpolation method used for pitchshifting grains. 1 = no interpolation. 2 = linear. \
		4 = cubic interpolation (more computationally intensive).
\f0\b \
\
\
Examples:\
s=Server.internal.boot;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\b0\fs18 \cf2 s.scope\
( \cf3 // supply a stereo file here\cf2 \
s.sendMsg(\cf4 \\b_allocRead\cf2 , 10, \cf5 "sounds/test.aif"\cf2 , 0, -1);\
\
\cf6 SynthDef\cf2 (\cf4 \\warp\cf2 , \{\cf6 arg\cf2  buffer = 0;\
	\cf6 var\cf2  out, pointer, filelength, pitch, env, dir;\
	pointer = \cf6 Line\cf2 .kr(0, 1, 15);\
	pitch = \cf6 LFNoise2\cf2 .kr(1).range(0.25, 4.0).round(0.25).midiratio;\
	dir = \cf6 EnvGen\cf2 .kr(\cf6 Env\cf2 ([1, 1, -1, -1], [9.999, 0.001, 5]), doneAction: 0);\
	env = \cf6 EnvGen\cf2 .kr(\cf6 Env\cf2 ([0.01, 1, 1, 0.01], [0.1, 14, 0.9], \cf4 'exp'\cf2 ), doneAction: 2);\
	out = \cf6 Warp1MC\cf2 .ar(2, buffer, pointer, pitch, 0.1, 8, 0.05, 2);\
	out.postln;\
	\cf6 Out\cf2 .ar(0, out);\
\}).send(s);\
\
)\
s.quit;\
\
s.sendMsg(\cf4 \\s_new\cf2 , \cf4 \\warp\cf2 , 1000, 0, 0, \cf4 \\buffer\cf2 , 10);\
\
\cf3 //Using Mouse Controls for freqshift and pointer arguments\cf2 \
(\
s.sendMsg(\cf4 \\b_allocRead\cf2 , 0, \cf5 "sounds/test.aif"\cf2 , 0, -1);\
\
\cf6 SynthDef\cf2 (\cf4 \\warp\cf2 , \{\cf6 arg\cf2  buffer = 0;\
	\cf6 var\cf2  out, pointer, filelength, env, dir, freq;\
	pointer = \cf6 MouseX\cf2 .kr(0, 1);\
	freq = \cf6 MouseY\cf2 .kr(0.5, 4);\
	env = \cf6 EnvGen\cf2 .kr(\cf6 Env\cf2 ([0.01, 1, 1, 0.01], [0.1, 14, 0.9], \cf4 'exp'\cf2 ), doneAction: 2);\
	out = \cf6 Warp1MC\cf2 .ar(2, buffer, pointer, freq, 0.1, 8, 0.05, 1.0);\
	\cf6 Out\cf2 .ar(0, out * env);\
\}).send(s);\
\
)\
\
\
s.sendMsg(\cf4 \\s_new\cf2 , \cf4 \\warp\cf2 , 1000, 0, 0, \cf4 \\buffer\cf2 , 0);\
\cf0 \
}