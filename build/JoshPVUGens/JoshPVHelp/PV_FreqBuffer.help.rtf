{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf2 PV_MagBuffer			Store FFT data in another buffer for other use\
PV_FreqBuffer\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\b0\fs18 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf2 PV_MagBuffer(buffer, databuffer)\
PV_FreqBuffer(buffer, databuffer)\
\
	databuffer - a buffer of (fft buffer size / 2) for storing freq or mag data in\
	\
Examples:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 // stores the Mag values from an FFT analysis into a buffer to be used outside the FFT process\cf2 \
(\
\cf4 SynthDef\cf2 (\cf5 \\magbufferana\cf2 , \{\cf4 arg\cf2  fftbuf, sndbuf, magbuf, freqbuf;\
	\cf4 var\cf2  in, chain;\
	in = \cf4 PlayBuf\cf2 .ar(1, sndbuf, \cf4 BufRateScale\cf2 .kr(sndbuf), loop: 1);\
	chain = \cf4 FFT\cf2 (fftbuf, in);\
	chain = \cf4 PV_MagBuffer\cf2 (chain, magbuf);\
	chain = \cf4 PV_FreqBuffer\cf2 (chain, freqbuf);\
	\cf4 IFFT\cf2 (chain);\
	\}).load(s);\
	\
\cf4 SynthDef\cf2 (\cf5 \\magbuffersynth\cf2 , \{\cf4 arg\cf2  gate = 1, magbuf, freqbuf, fftframes, scale = 1;\
	\cf4 var\cf2  pars, src, out, trig, env;\
	env = \cf4 EnvGen\cf2 .kr(\cf4 Env\cf2 ([0, 1, 0], [1, 1], \cf5 \\sin\cf2 , 1), gate, doneAction: 2);\
	\cf3 // we'll grab 50 random partials\cf2 \
	pars = \cf4 Array\cf2 .fill(50, \{\cf4 IRand\cf2 .new(0, fftframes)\});\
	\cf3 // use PinkNoise as a filter src\cf2 \
	src = \cf4 PinkNoise\cf2 .ar(0.5);\
	\cf3 // Index the freq and mag buffers to control a filter bank\cf2 \
	out = (\cf4 BPF\cf2 .ar(src, \cf4 Index\cf2 .kr(freqbuf, pars), 0.001) * \cf4 Index\cf2 .kr(magbuf, pars)).sum * scale;\
	\cf4 Out\cf2 .ar(0, out * env);\
	\}).load(s);\
)\
s.boot;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 // allocate the fft buf, sndbuf, and mag and freq bufs\cf2 \
(\
s.sendBundle(0.1, [\cf5 \\b_alloc\cf2 , 0, 1024], [\cf5 \\b_allocRead\cf2 , 1, \cf6 "sounds/a11wlk01.wav"\cf2 ], [\cf5 \\b_alloc\cf2 , 2, 512], \
	[\cf5 \\b_alloc\cf2 , 3, 512]);\
)\
\cf3 // start the analuysis\cf2 \
(\
s.sendMsg(\cf5 \\s_new\cf2 , \cf5 \\magbufferana\cf2 , z = s.nextNodeID, 0, 1, \cf5 \\fftbuf\cf2 , 0, \cf5 \\sndbuf\cf2 , 1,\
	\cf5 \\magbuf\cf2 , 2, \cf5 \\freqbuf\cf2 , 3);\
)\
(\
\cf3 // there is a strange buildup of energy when a note starts... so, start the synthesis a bit later\cf2 \
s.sendMsg(\cf5 \\s_new\cf2 , \cf5 \\magbuffersynth\cf2 , y = s.nextNodeID, 1, 1, \cf5 \\magbuf\cf2 , 2, \cf5 \\freqbuf\cf2 , 3, \
	\cf5 \\fftframes\cf2 , 512);\
)\
( \cf3 // kill the current note, start a new one (with different pars)\cf2 \
s.sendMsg(\cf5 \\n_set\cf2 , y, \cf5 \\gate\cf2 , 0);\
s.sendMsg(\cf5 \\s_new\cf2 , \cf5 \\magbuffersynth\cf2 , y = s.nextNodeID, 1, 1, \cf5 \\magbuf\cf2 , 2, \cf5 \\freqbuf\cf2 , 3, \
	\cf5 \\fftframes\cf2 , 512)\
)\
// free the synthesis synth\
s.sendMsg(\cf5 \\n_set\cf2 , y, \cf5 \\gate\cf2 , 0)\
\cf3 // free the analysis\cf2 \
s.sendMsg(\cf5 \\n_free\cf2 , z);\
\
// free the buffers\
4.do\{arg i; s.sendMsg(\\b_free, i)\};\
\
s.quit\
}