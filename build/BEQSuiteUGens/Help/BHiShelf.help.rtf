{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\tx7280\tx7840\ql\qnatural

\f0\b\fs36 \cf0 BHiShelf	
\fs30 	Hi Shelf.
\f1\b0\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 \
BHiShelf.ar(in, freq, rs, db, mul, add)
\f1\b0\fs18 \
\

\f0\b\fs24 in
\f2\b0  - input signal to be processed.\

\f0\b freq
\f2\b0  - center frequency.\

\f0\b rs
\f2\b0  - the reciprocal of S.  Shell boost/cut slope. When S = 1, the shelf slope is as steep as it can be and remain monotonically increasing or decreasing gain with frequency.  The shelf slope, in  dB/octave, remains proportional to S for all other values for a fixed 
\f0\b freq/SampleRate.ir
\f2\b0  and 
\f0\b db
\f2\b0 .\

\f0\b db 
\f2\b0 - gain. boost/cut the center frequency in dBs.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 The B equalization suite is based on the Second Order Section (
\f0\b SOS
\f2\b0 ) biquad UGen.\
\
note: Biquad coefficient calculations imply certain amount of CPU overhead. These plugin UGens contain optimizations such that the coefficients get updated only when there has been a change to one of\
the filter's parameters. This can cause spikes in CPU performance and should be considered when using several of these units.\
\
see also:
\f1\fs18  
\f0\b\fs24 SOS, BLowPass, BLowPass4, BHiPass, BHiPass4, BPeakEQ, BLowShelf, BBandPass, BBandStop, BAllPass.
\f1\b0\fs18 \
\
s.boot;\
(\
z = \{ \cf2 // toy around with boost/cut\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 BHiShelf\cf0 .ar(\
	\cf3 AudioIn\cf0 .ar([1,2]),\
	\cf3 MouseX\cf0 .kr(2200,18000,\cf4 \\exponential\cf0 ),\
	1.0,  \cf2 // rs\cf0 \
	\cf3 MouseY\cf0 .kr(18.0, -18.0, \cf4 \\linear\cf0 ),\
	0.5); \cf2 // mul\cf0 \
\}.play)\
z.release;\
\
(\
z = \{ \cf2 // toy around with rs\cf0 \
\cf3 BHiShelf\cf0 .ar(\
	\cf3 AudioIn\cf0 .ar([1,2]),\
	\cf3 MouseX\cf0 .kr(2200,18000,\cf4 \\exponential\cf0 ),\
	\cf3 MouseY\cf0 .kr(0.1, 1.0, \cf4 \\linear\cf0 ),  \cf2 // rs\cf0 \
	6,	\cf2 // db\cf0 \
	0.5); \cf2 // mul\cf0 \
\}.play)\
z.release;\
}